plugins {
    // project plugins
    id 'java-gradle-plugin'
    id 'groovy'
    // test coverage
    id 'jacoco'

    // ide plugin
    id 'idea'

    // intershop test plugin
    id 'com.intershop.gradle.test' version '2.2.0'

    // plugin for documentation
    id 'org.asciidoctor.convert' version '1.5.3'

    // publish plugin
    id 'maven-publish'

    // plugin for publishing to Gradle Portal
    id 'com.gradle.plugin-publish' version '0.9.9'
    // plugin for publishing to jcenter
    id 'com.jfrog.bintray' version '1.7.3'
}

// release configuration
group 'com.intershop.gradle.scm'
description 'Gradle SCM version plugin - SCM based version handling for Gradle'
version = '2.6.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7

// set correct project status
if (project.version.endsWith('-SNAPSHOT')) {
    status = 'snapshot'
}

// test configuration
test {
    if(System.getenv('SVNUSER') && System.getenv('SVNPASSWD') && System.getenv('SVNURL')) {
        systemProperty 'svnurl', System.getenv('SVNURL')
        systemProperty 'svnuser', System.getenv('SVNUSER')
        systemProperty 'svnpasswd', System.getenv('SVNPASSWD')
    }
    if(System.getenv('GITUSER') && System.getenv('GITPASSWD') && System.getenv('GITURL')) {
        systemProperty 'giturl', System.getenv('GITURL')
        systemProperty 'gituser', System.getenv('GITUSER')
        systemProperty 'gitpasswd', System.getenv('GITPASSWD')
    }

    if(System.getProperty('SVNUSER') && System.getProperty('SVNPASSWD') && System.getProperty('SVNURL')) {
        systemProperty 'svnurl', System.getProperty('SVNURL')
        systemProperty 'svnuser', System.getProperty('SVNUSER')
        systemProperty 'svnpasswd', System.getProperty('SVNPASSWD')
    }

    if(System.getProperty('GITUSER') && System.getProperty('GITPASSWD') && System.getProperty('GITURL')) {
        systemProperty 'giturl', System.getProperty('GITURL')
        systemProperty 'gituser', System.getProperty('GITUSER')
        systemProperty 'gitpasswd', System.getProperty('GITPASSWD')
    }

    //Change directory for gradle tests
    systemProperty 'org.gradle.native.dir', '.gradle'
    //Set supported Gradle version
    systemProperty 'intershop.gradle.versions', '2.11'
}

task copyAsciiDoc {
    def outputDir = file("$buildDir/tmp/asciidoctorSrc")
    def inputFiles = fileTree(dir: rootDir, include: '**/*.asciidoc')

    inputs.files inputFiles
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()

        copy {
            from inputFiles
            into outputDir
        }
    }
}

asciidoctorj {
    noDefaultRepositories = true
}

asciidoctor {
    sourceDir "${buildDir}/tmp/asciidoctorSrc"
    sources {
        include 'README.asciidoc'
    }

    backends 'html5', 'docbook'
    options doctype : 'article',
            ruby    : 'erubis'
    attributes  'latestRevision'     : project.version,
            'toc':'left',
            'toclevels':'2',
            'source-highlighter' : 'coderay',
            'icons': 'font',
            'setanchors':'true',
            'idprefix':'asciidoc_',
            'idseparator':'-',
            'docinfo1':'true'
}

asciidoctor.dependsOn copyAsciiDoc

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task groovydocJar(type: Jar) {
    dependsOn groovydoc
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

// additional sources artifact
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        intershopMvn(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }

            artifact groovydocJar {
                classifier "javadoc"
            }

            artifact(new File(buildDir, 'asciidoc/html5/README.html')) {
                classifier 'reference'
            }

            artifact(new File(buildDir, 'asciidoc/docbook/README.xml')) {
                classifier = 'docbook'
            }

            pom.withXml {
                def Node root = asNode();
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', "https:/gitlab.intershop.de/IntershopGradlePlugins/${project.name}")

                def scm = root.appendNode( 'scm' )
                scm.appendNode( 'url', "https://gitlab.intershop.de/IntershopGradlePlugins/${project.name}")
                scm.appendNode( 'connection', "scm:git:https://gitlab.intershop.de/IntershopGradlePlugins/${project.name}.git")

                def org = root.appendNode( 'organization' )
                org.appendNode( 'name', 'Intershop Communications' )
                org.appendNode( 'url', 'http://intershop.com' )

                def license = root.appendNode( 'licenses' ).appendNode( 'license' );
                license.appendNode( 'name', 'Apache License, Version 2.0' )
                license.appendNode( 'url', 'http://www.apache.org/licenses/LICENSE-2.0' )
                license.appendNode( 'distribution', 'repo' )
            }
        }
    }

    repositories {
        maven {
            url "/Users/mraab/.gradle/.localRepo"
        }
    }
}

publish.dependsOn asciidoctor

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'intershopcommunicationsag'

        licenses = ['Apache-2.0']
        vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"

        desc = project.description
        websiteUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
        issueTrackerUrl = "https://github.com/IntershopCommunicationsAG/${project.name}/issues"

        labels = ['intershop', 'gradle', 'plugin', 'test']
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            released  = new Date()
            vcsTag = project.version
        }

        publications = ['intershopMvn']
    }
}

bintrayUpload.dependsOn asciidoctor

pluginBundle {
    website = "https://github.com/IntershopCommunicationsAG/${project.name}"
    vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
    description = project.description
    tags = ['intershop', 'gradle', 'plugin', 'test']

    plugins {
        gradleTestPlugin {
            id = 'com.intershop.gradle.scmversion'
            displayName = project.description
        }
    }
}

dependencies {
    compile 'com.intershop.gradle.version:extended-version:1.3.0'

    //svn
    // replace svnkit's JNA 4.x with 3.2.7, which is used by Gradle itself
    compile('org.tmatesoft.svnkit:svnkit:1.9.3') {
        exclude group: 'net.java.dev.jna'
        exclude group: 'com.trilead', module: 'trilead-ssh2'
    }
    compile 'com.trilead:trilead-ssh2:1.0.0-build221'
    runtime 'net.java.dev.jna:jna:3.2.7'

    //jgit
    compile('org.eclipse.jgit:org.eclipse.jgit:5.1.3.201810200350-r') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    runtime 'org.apache.httpcomponents:httpclient:4.4.1'
    runtime 'org.slf4j:slf4j-api:1.7.10'

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    testCompile 'commons-io:commons-io:2.2'
}

repositories {
    jcenter()
}
